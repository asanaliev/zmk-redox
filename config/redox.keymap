/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&sk { quick-release; };

&mt { flavor = "balanced"; };

/ {
    behaviors {
        cx_lt: cx_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "CX_LT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        mt_cx: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            label = "REQUIRE_PRIOR_IDLE";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        del_line: del_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RG(LEFT) &kp RC(K)>;
            label = "DEL_LINE";
        };

        del_word: del_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(RIGHT) &kp LA(BACKSPACE)>;
            label = "DEL_WORD";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            // --------------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |  4  |  5  |                   ---                |  6    |  7    |  8    |  9   | 0  |    BKSP   |
            // | TAB   |  Q  |  W  |   E   |  R  |  T  |   (   |           ---        |  )    |  Y    |  U    |  I    |  O   | P  |     -     |
            // | CTRL  |  A  |  S  |   D   |  F  |  G  |   [   |           ---        |  ]    |  H    |  J    |  K    |  L   | ;  |     '     |
            // | SHIFT |  Z  |  X  |   C   |  V  |  B  | PG_UP | PG_DOWN | --- | HOME | END   |  N    |  M    |  ,    |  .   | /  | SHFT |
            // | CRTL  | ALT | GUI | LOWER |    BKSP    | ESC | SPACE   | --- | DEL  | SPACE |     RET     | LEFT  | DOWN | UP |   RIGHT   |

            bindings = <
&kp ESC         &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_1   &kp N5                                          &kp N8  &kp N9     &kp N0     &kp N7      &kp N6  &kp NUMBER_1
&kp TAB         &kp Q         &kp W         &kp E         &kp R          &kp T   &none                    &none          &kp Y   &kp U      &kp I      &kp O       &kp P   &kp NUMBER_2
&kp CAPSLOCK    &kp A         &kp S         &kp D         &kp F          &kp G   &none                    &kp RG(SPACE)  &kp H   &kp J      &kp K      &kp L       &none   &kp NUMBER_3
&sk LEFT_SHIFT  &kp Z         &kp X         &kp C         &kp V          &kp B   &sl 1    &none    &none  &none          &kp N   &kp M      &kp COMMA  &kp PERIOD  &none   &sk RIGHT_SHIFT
&kp LG(TAB)     &sk LCTRL     &sk LALT      &sk LGUI      &kp BACKSPACE          &kp ESC  &none    &none  &lt 1 SPACE            &kp ENTER  &kp LEFT   &kp DOWN    &kp UP  &kp RIGHT
            >;
        };

        SYMBOLS {
            // --------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |   4   |  5  |                   ---              |  6  |  7  |   8  |  9   |  0  |  DEL  |
            // | ESC   |  1  |  2  |   3   |   4   |  5  |   (   |           ---        |  )  |  6  |  7  |   8  |  9   |  0  |  DEL  |
            // | CTRL  |  -  |  =  |   [   |   ]   |  \  |   [   |           ---        |  ]  |  *  |  4  |   5  |  6   |  +  |   -   |
            // | SHIFT | ESC | GUI | COPY  | PASTE |     | PG_UP | PG_DOWN | --- | HOME | END |  \  |  1  |   2  |  3   | RET |  RET  |
            // | CRTL  | ALT | GUI | LOWER |     GUI     | LOWER | SPACE   | --- | DEL  |  0  |    RAISE  | LEFT | DOWN | UP  | RIGHT |

            bindings = <
&trans  &none              &kp QUESTION      &kp PIPE   &kp SLASH          &none                                                                &none          &kp QUESTION       &kp PIPE       &kp SLASH         &none              &trans
&none   &kp RIGHT_BRACE    &kp LEFT_BRACE    &kp MINUS  &kp PLUS           &kp BACKSLASH  &bt BT_CLR_ALL                         &kp RG(SPACE)  &kp BACKSLASH  &kp PLUS           &kp MINUS      &kp LEFT_BRACE    &kp RIGHT_BRACE    &none
&trans  &kp RIGHT_BRACKET  &kp LEFT_BRACKET  &kp EQUAL  &kp DOUBLE_QUOTES  &kp TILDE      &bt BT_SEL 0                           &trans         &kp TILDE      &kp DOUBLE_QUOTES  &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none
&none   &none              &kp COLON         &kp SEMI   &kp SINGLE_QUOTE   &kp GRAVE      &trans          &bootloader    &trans  &trans         &kp GRAVE      &kp SINGLE_QUOTE   &kp SEMICOLON  &kp COLON         &none              &none
&none   &trans             &trans            &trans     &none                             &none           &trans         &trans  &kp TAB                       &none              &trans         &trans            &trans             &trans
            >;
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &none   &trans  &trans                                    &trans  &trans  &none   &trans  &trans  &trans
&trans  &trans  &none   &trans  &trans  &trans  &trans                    &trans  &none   &trans  &trans  &none   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &trans  &none   &none   &none   &none   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &none   &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans    &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
